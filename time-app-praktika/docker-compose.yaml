version: '3.1' #Версия схемы

services: #Сервисы, тут описываются все контейнеры
  api: #Контейнер API
    restart: always #Если произойдёт ошибка или любой другой выход из программы, контейнер снова запустится.
    build: ./api #Путь к папке с Dockerfile для API
    ports: #Порты для прослушивания.
      - 5555:5000 #Внешний порт 5555 и внутри контейнера 5000. с 5000 порта будет идти трафик на 5555.
    depends_on: #Зависит от mysql, он не будет запускаться пока не запуститься mysql контейнер.
      - mysql
  frontend: #Контейнер Frontend
    restart: always #Если произойдёт ошибка или любой другой выход из программы, контейнер снова запустится.
    build: ./frontend #Путь к папке с Dockerfile для API
    ports: #Порты для прослушивания.
      - 8954:8954 #Внешний порт 8954 и внутри контейнера 8954. с 8954 порта будет идти трафик на 8954.
  mysql: #Контейнер MySQL
    restart: always #Если произойдёт ошибка или любой другой выход из программы, контейнер снова запустится.
    image: mysql #Образ MYSQL из Docker HUB
    environment: #Переменные окружения для задачи паролей и юзеров для БД.
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=time_db
    volumes: #Том для хранения данных MySQL
      - mysql_data:/var/lib/mysql
  adminer: #Контейнер Adminer
    restart: always #Если произойдёт ошибка или любой другой выход из программы, контейнер снова запустится.
    image: adminer #Образ adminer из Docker HUB
    ports: 
      - 8888:8888 #Внешний порт 8888 и внутри контейнера 8888. с 8888 порта будет идти трафик на 8888.
    depends_on: #Зависит от mysql, он не будет запускаться пока не запуститься mysql контейнер.
      - mysql

volumes:
  mysql_data: #Объявление тома для MySQL.